name: End2End Testing
on:
  push:

jobs:
  end2end:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Set up K3S
      uses: debianmaster/actions-k3s@master
      id: k3s
      with:
        version: 'v1.21.2-k3s1'
    - name: Check Cluster
      run: |
        kubectl get nodes
    - name: Setup Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        helm version
    - name: Install Canary
      run: |
        helm upgrade -i canary-00 \
          --atomic
          --timeout 300s
          --set mesh.MESH_NAME=canary-00 \
          --set mesh.MESH_JOIN_ADDRESS=canary-00-canary-bot-mesh:8081 \
          --set mesh.MESH_TARGET=canary-01-canary-bot-mesh:8081 \
          --set addEnv.MESH_TOKEN=12345678 chart
        helm upgrade -i canary-01 \
          --atomic
          --timeout 300s
          --set mesh.MESH_NAME=canary-01 \
          --set mesh.MESH_JOIN_ADDRESS=canary-01-canary-bot-mesh:8081 \
          --set mesh.MESH_TARGET=canary-00-canary-bot-mesh:8081 \
          --set addEnv.MESH_TOKEN=12345678 chart
    - name: Check Pods
      run: |
        kubectl get pods
    - name: Check Canary 00
      run: |
        SERVICE=$(kubectl get services canary-00-canary-bot-api -o jsonpath={.spec.clusterIP})
        curl -v -H 'Authorization: Bearer 12345678' -H 'Content-Type: application/json' $SERVICE:8080/api/v1/samples 
    - name: Check Canary 01
      run: |
        SERVICE=$(kubectl get services canary-01-canary-bot-api -o jsonpath={.spec.clusterIP})
        curl -v -H 'Authorization: Bearer 12345678' -H 'Content-Type: application/json' $SERVICE:8080/api/v1/samples 

